/* src/components/Nav/Nav.module.css */

/* ======================================== */
/* Base Nav Container & Structure           */
/* ======================================== */

.navContainer {
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    min-height: 56px; /* Default minimum height */
    z-index: 100;
    transition: background 0.4s ease, border-color 0.4s ease, box-shadow 0.4s ease, min-height 0.4s ease;
  
    /* Dark Mode Default Styles */
    background: linear-gradient(to bottom, var(--bg-nav-dark-start, rgba(var(--bg-primary-rgb), 0.96)) 0%, var(--bg-nav-dark-end, rgba(var(--bg-secondary-rgb), 0.98)) 100%);
    backdrop-filter: blur(16px) saturate(110%);
    -webkit-backdrop-filter: blur(16px) saturate(110%);
    border-bottom: 1px solid var(--nav-border-dark-start, rgba(var(--accent-secondary-rgb), 0.15));
    box-shadow: 0 6px 20px -3px var(--nav-shadow-dark, rgba(var(--shadow-color-rgb), 0.6));
  }
  
  .navScrolled {
    /* Dark Mode Scrolled Styles */
    background: linear-gradient(to bottom, var(--bg-nav-dark-scrolled-start, rgba(var(--bg-primary-rgb), 1.0)) 0%, var(--bg-nav-dark-scrolled-end, rgba(var(--bg-secondary-rgb), 1.0)) 100%);
    border-bottom-color: rgba(var(--accent-primary-rgb), 0.35);
    box-shadow: 0 10px 25px -5px var(--nav-shadow-dark, rgba(var(--shadow-color-rgb), 0.7));
  }
  
  /* Light Mode Styles */
  :global(.light) .navContainer {
    background: linear-gradient(to bottom, var(--bg-nav-light-start, rgba(var(--bg-primary-rgb), 0.97)) 0%, var(--bg-nav-light-end, rgba(var(--bg-secondary-rgb), 0.99)) 100%);
    border-bottom: 1px solid var(--nav-border-light-start, rgba(var(--accent-secondary-rgb), 0.25));
    box-shadow: 0 6px 20px -3px var(--nav-shadow-light, rgba(var(--shadow-color-rgb), 0.3));
  }
  
  :global(.light) .navScrolled {
    background: linear-gradient(to bottom, var(--bg-nav-light-scrolled-start, rgba(var(--bg-primary-rgb), 1.0)) 0%, var(--bg-nav-light-scrolled-end, rgba(var(--bg-secondary-rgb), 1.0)) 100%);
    border-bottom-color: rgba(var(--accent-primary-rgb), 0.35);
    box-shadow: 0 10px 25px -5px var(--nav-shadow-light, rgba(var(--shadow-color-rgb), 0.4));
  }
  
  /* Blog Mode Nav Container - Reduced Height */
  .navContainer.blogMode {
    min-height: 60px; /* <<< ADJUSTED: Slightly shorter for blog mode */
    /* Add any other blog-specific container overrides if needed */
  }
  
  /* ======================================== */
  /* Visual Effects & Dividers              */
  /* ======================================== */
  
  .dividerGradient {
    background: linear-gradient(to bottom, transparent, rgba(var(--text-secondary-rgb), 0.4), transparent);
    opacity: 0.6;
    height: 1.75rem;
    width: 1px;
    flex-shrink: 0; /* Prevent shrinking in flex layouts */
  }
  
  .dividerGradientBlog {
    background: linear-gradient(to bottom, transparent, rgba(var(--accent-secondary-rgb), 0.5), transparent);
    opacity: 0.7;
    height: 1.75rem;
    width: 1px;
    flex-shrink: 0;
  }
  
  .noiseOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-image: url('/noise.png'); /* Ensure this path is correct */
    opacity: 0.05;
    pointer-events: none;
    z-index: 150; /* Above nav content, below modals maybe? */
    animation: noiseAnim 0.1s infinite steps(2);
    mix-blend-mode: overlay;
  }
  
  @keyframes noiseAnim {
    0% { transform: translate(0, 0); }
    10% { transform: translate(-1px, -1px); }
    20% { transform: translate(1px, -1px); }
    30% { transform: translate(-1px, 1px); }
    40% { transform: translate(1px, 1px); }
    50% { transform: translate(-1px, -1px); }
    60% { transform: translate(1px, -1px); }
    70% { transform: translate(-1px, 1px); }
    80% { transform: translate(1px, 1px); }
    90% { transform: translate(-1px, -1px); }
    100% { transform: translate(0, 0); }
  }
  
  
  .navBottomGlow {
    position: absolute;
    bottom: -30px;
    left: 0;
    width: 100%;
    height: 45px;
    background: radial-gradient(ellipse at bottom, rgba(var(--accent-primary-rgb), 0.25) 0%, transparent 65%);
    pointer-events: none;
    z-index: -1; /* Behind the nav */
    filter: blur(10px);
    transition: opacity var(--transition-medium);
    opacity: 0.6;
  }
  
  .navBottomGlowScrolled {
    opacity: 0.8;
  }
  
  /* ======================================== */
  /* Logo & Tagline Styles                    */
  /* ======================================== */
  
  .logoLink {
    text-decoration: none !important;
    border-bottom: none !important;
    color: transparent; /* For background-clip: text */
    display: inline-block;
    vertical-align: middle;
    position: relative;
    font-family: var(--font-display);
    outline: none;
    transition: filter var(--transition-fast);
    line-height: 1; /* Prevent extra space */
  }
  
  .logoLink:hover {
    color: transparent;
    border-bottom: none !important;
    filter: brightness(1.05);
  }
  
  /* --- Default Logo Styles --- */
  .logoLinkDefault {
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    transition: transform var(--transition-bounce) 0.15s, filter var(--transition-medium);
    filter: drop-shadow(1px 1px 0px rgba(var(--accent-secondary-rgb), 0.4));
    will-change: filter, transform;
    transform-style: preserve-3d;
    perspective: 500px;
  }
  
  .logoLinkDefault:hover {
    transform: scale(1.03) rotateY(-1deg) translateZ(5px);
    filter: drop-shadow(2px 2px 0px rgba(var(--accent-secondary-rgb), 0.6)) brightness(1.1);
  }
  
  /* --- Generic Logo Text Styling (Apply to inner text span/element) --- */
  .logoTextMain,
  .ManicAgencyLogoComponentInternalTextClass { /* Keep both if used */
    font-family: inherit;
    font-weight: inherit;
    letter-spacing: inherit;
    position: relative;
    display: inline-block;
    will-change: filter, transform, background-position, clip-path, content, opacity;
    background: linear-gradient(135deg, #FF1B6B 10%, #FF70B3 50%, #FFBDE6 90%);
    -webkit-background-clip: text;
    background-clip: text;
    background-size: 250% auto;
    color: transparent;
    animation: animatedGradientVibrant 5s ease-in-out infinite alternate, surrealTextGlitchV10 10s linear infinite alternate;
    text-shadow: 1px 1px 0px rgba(255, 27, 107, 0.5), -1px -1px 0px rgba(var(--accent-secondary-rgb), 0.3);
    font-size: 1.8rem; /* Default size */
    line-height: 1; /* Ensure tight line height */
  }
  
  /* --- Blog Logo Specific Styles --- */
  .logoLinkBlog {
    position: relative; /* Needed for tagline positioning sometimes */
    transition: transform var(--transition-bounce) 0.15s, filter var(--transition-medium);
    filter: drop-shadow(0px 1px 2px rgba(var(--accent-highlight-rgb), 0.3));
    will-change: filter, transform;
  }
  
  .logoLinkBlog:hover {
    transform: scale(1.03);
    filter: drop-shadow(0px 2px 3px rgba(var(--accent-highlight-rgb), 0.5)) brightness(1.1);
  }
  
  /* --- ADJUSTED: Blog Logo Text Size Override --- */
  /* Target the actual text element inside the blog logo link */
  /* Ensure '.logoTextMain' or the correct class is used in your blog logo component */
  .logoLinkBlog .logoTextMain,
  .logoLinkBlog .ManicAgencyLogoComponentInternalTextClass {
    font-size: 1.4rem; /* <<< REDUCED SIZE: Adjust this value as needed */
    /* Override other text styles for blog logo if necessary */
    /* Example: Different gradient or animation */
    /* background: linear-gradient(...); */
    /* animation: none; */
    text-shadow: 1px 1px 0px rgba(var(--accent-highlight-rgb), 0.4), -1px -1px 0px rgba(var(--accent-secondary-rgb), 0.2); /* Slightly adjusted shadow for blog */
  }
  
  
  /* --- Base Tagline Styles --- */
  .tagline {
    font-family: var(--font-mono);
    letter-spacing: 0.04em;
    opacity: 0.9;
    transition: opacity var(--transition-fast), color var(--transition-fast);
    color: var(--text-secondary);
    text-shadow: 0 0 2px rgba(var(--text-secondary-rgb), 0.2);
    line-height: 1.3;
    display: flex; /* For aligning icon and text */
    align-items: center;
    gap: 0.3em;
    white-space: nowrap;
    flex-shrink: 1; /* Allow shrinking if needed */
    min-width: 0;
  }
  
  .tagline:hover {
    opacity: 1;
    color: var(--text-primary);
  }
  
  /* --- ADJUSTED: Blog Tagline Styles --- */
  .taglineBlog {
    /* Inherits base .tagline styles */
    color: var(--text-secondary);
    text-shadow: 0 0 3px rgba(var(--accent-secondary-rgb), 0.25);
    animation: taglinePulseBlog 6s ease-in-out infinite alternate; /* Slower pulse */
    font-size: 0.75rem; /* <<< ADJUSTED: Slightly smaller */
    opacity: 0.85;
    margin-top: -0.4rem; /* <<< ADJUSTED: Pulls tagline closer to logo above it. Adjust value as needed. */
    /* Removed absolute positioning */
    /* Ensure parent container allows for this stacking (e.g., flex-direction: column) */
  }
  
  @keyframes taglinePulseBlog {
    0% { opacity: 0.7; text-shadow: 0 0 2px rgba(var(--accent-secondary-rgb), 0.2); }
    100% { opacity: 0.9; text-shadow: 0 0 4px rgba(var(--accent-secondary-rgb), 0.3); }
  }
  
  /* --- Tagline Icons & Animated Elements --- */
  .taglineScopeIcon {
    display: inline-block;
    width: 0.8em; /* Relative to tagline font-size */
    height: 0.8em;
    stroke: var(--accent-secondary);
    stroke-width: 1.5;
    opacity: 0.8;
    vertical-align: -0.05em; /* Fine-tune vertical alignment */
    transition: transform var(--transition-fast), filter var(--transition-fast);
    flex-shrink: 0; /* Prevent shrinking */
  }
  
  /* Blog tagline hover specifically targets its icon */
  .taglineBlog:hover .taglineScopeIcon {
    transform: rotate(-15deg) scale(1.1);
    animation: scopeGlow 3s ease-in-out infinite alternate;
    opacity: 1;
  }
  
  @keyframes scopeGlow {
    0% { filter: drop-shadow(0 0 1px rgba(var(--accent-secondary-rgb), 0.5)); }
    100% { filter: drop-shadow(0 0 3px rgba(var(--accent-highlight-rgb), 0.7)); }
  }
  
  .tagline :global(span.animated-ascii) {
    display: inline-block;
    font-size: 1.1em; /* Relative to tagline font size */
    color: var(--accent-highlight);
    filter: var(--filter-glow-highlight);
    animation: asciiPopV2 1.8s ease-in-out infinite;
    vertical-align: baseline; /* Align with text baseline */
    flex-shrink: 0;
  }
  
  .taglineBlog :global(span.animated-ascii) {
    color: var(--accent-secondary);
    filter: var(--filter-glow-secondary);
  }
  
  @keyframes asciiPopV2 {
    0%, 100% { transform: translateY(0) scale(1); opacity: 0.9; }
    50% { transform: translateY(-1px) scale(1.05); opacity: 1; }
  }
  
  /* ====================================================== */
  /* Desktop Nav Links Styles (Icon Animation Version)     */
  /* ====================================================== */
  .navDesktop {
    display: flex; /* Use flex on the container */
    align-items: stretch; /* Make items fill height */
    gap: 0.5rem; /* Space between nav items */
  }
  
  .navLink {
    position: relative;
    display: inline-flex; /* Align icon and text */
    align-items: center;
    gap: 0.6em; /* Space between icon and text */
    min-height: 52px; /* Ensure consistent height */
    padding: 0 1rem; /* Horizontal padding */
    font-family: var(--font-display);
    font-size: 0.95rem; /* Base font size */
    font-weight: 600;
    letter-spacing: 0.06em;
    color: var(--text-secondary);
    text-decoration: none !important;
    border-bottom: none !important;
    border-radius: var(--radius-md);
    overflow: hidden; /* Needed for potential background effects */
    cursor: pointer;
    background-color: transparent;
    border: 1px solid transparent; /* Placeholder for potential borders */
    box-shadow: inset 0 1px 1px rgba(var(--text-primary-rgb), 0.02);
    transition: color var(--transition-fast), transform var(--transition-fast), box-shadow var(--transition-fast);
    will-change: color, transform, box-shadow;
  }
  
  .navLink:hover,
  .navLink:focus-visible {
    color: var(--text-primary);
    box-shadow: inset 0 1px 1px rgba(var(--text-primary-rgb), 0.04);
    transform: translateY(-2px); /* Slight lift effect */
    outline: none;
  }
  
  .navLink:active {
    transform: translateY(0px) scale(0.98); /* Press effect */
    box-shadow: inset 0px 1px 2px rgba(var(--shadow-color-rgb), 0.2);
  }
  
  .linkText {
    position: relative; /* For z-index stacking if needed */
    z-index: 2;
    transition: transform 0.4s var(--transition-bounce), opacity 0.4s ease, color var(--transition-fast), text-shadow var(--transition-fast), filter var(--transition-fast);
    will-change: transform, opacity, color, text-shadow, filter;
    display: inline-block;
    text-align: left;
    white-space: nowrap;
  }
  
  .navLink .nav-svg {
    flex-shrink: 0; /* Prevent icon shrinking */
    display: inline-block;
    vertical-align: middle; /* Align with text */
    width: 1.3em; /* Icon size relative to font */
    height: 1.3em;
    color: inherit; /* Inherit color from parent link */
    transition: color var(--transition-fast), transform 0.3s var(--transition-bounce), filter var(--transition-fast);
    will-change: color, transform, filter;
    stroke: currentColor;
    stroke-width: 1.5;
    fill: none;
    overflow: visible; /* Allow parts of animation (like glows) to extend */
    transform-origin: center center;
    transform: scale(1) rotate(0deg);
  }
  
  /* Hover/Focus states */
  .navLink:hover .linkText,
  .navLink:focus-visible .linkText {
    opacity: 1; /* Ensure text is fully visible */
  }
  
  .navLink:hover .nav-svg,
  .navLink:focus-visible .nav-svg {
    transform: scale(1.1) rotate(-5deg); /* Icon hover effect */
    color: var(--text-primary); /* Match text hover color */
  }
  
  /* Active Page Styles */
  .navActive {
    box-shadow: inset 0px 1px 2px rgba(var(--shadow-color-rgb), 0.15);
    /* No translate Y on active to avoid jump */
  }
  
  .navActive .linkText {
    opacity: 1;
    font-weight: 700; /* Make active link bolder */
  }
  
  .navActive .nav-svg {
    opacity: 1;
    transform: scale(1) rotate(0deg); /* Reset transform */
  }
  
  /* Color coding for Active Links */
  .navLink[data-nav-id="services"].navActive { color: var(--accent-primary); }
  .navLink[data-nav-id="services"].navActive .nav-svg { color: var(--accent-primary); filter: var(--filter-glow-primary); }
  
  .navLink[data-nav-id="projects"].navActive { color: var(--accent-secondary); }
  .navLink[data-nav-id="projects"].navActive .nav-svg { color: var(--accent-secondary); filter: var(--filter-glow-secondary); }
  
  .navLink[data-nav-id="open-source"].navActive { color: var(--accent-alert); }
  .navLink[data-nav-id="open-source"].navActive .nav-svg { color: var(--accent-alert); filter: var(--filter-glow-alert); }
  
  .navLink[data-nav-id="blog"].navActive { color: var(--accent-highlight); }
  .navLink[data-nav-id="blog"].navActive .nav-svg { color: var(--accent-highlight); filter: var(--filter-glow-highlight); }
  .navLink[data-nav-id="blog"].navActive .linkText { text-shadow: 0 0 8px var(--accent-highlight, transparent); }
  
  
  /* Play animations on hover/focus/active */
  .navLink:hover .animated-stroke,
  .navLink:focus-visible .animated-stroke,
  .navLink.navActive .animated-stroke,
  .navLink:hover .animated-fill,
  .navLink:focus-visible .animated-fill,
  .navLink.navActive .animated-fill,
  .navLink:hover .pulse-node,       /* Example animation class */
  .navLink:focus-visible .pulse-node,
  .navLink.navActive .pulse-node,
  .navLink:hover .svg-eyelid,       /* Example animation class */
  .navLink:focus-visible .svg-eyelid,
  .navLink.navActive .svg-eyelid,
  .navLink:hover .eye-scanline,     /* Example animation class */
  .navLink:focus-visible .eye-scanline,
  .navLink.navActive .eye-scanline,
  .navLink:hover .svg-chevron,      /* Example animation class */
  .navLink:focus-visible .svg-chevron,
  .navLink.navActive .svg-chevron {
    animation-play-state: running !important;
  }
  
  /* --- Special Link Styles --- */
  
  /* Blog Link Specifics */
  .navLinkBlog { /* Applied to the .navLink element for the blog */
    font-family: var(--font-mono);
    text-transform: lowercase;
    letter-spacing: 0.08em !important; /* Override default spacing */
  }
  
  .navLinkBlog:hover .linkText {
    transform: scale(1.03) skew(-1deg);
    text-shadow: 0 0 10px var(--accent-highlight, transparent);
    opacity: 1;
    color: var(--accent-highlight); /* Ensure color changes on hover */
  }
  
  .navLinkBlog:hover .nav-svg {
    transform: scale(1.15) rotate(5deg); /* Slightly different hover effect */
    filter: var(--filter-glow-highlight);
    color: var(--accent-highlight); /* Ensure color changes on hover */
  }
  
  /* Open Source Link Glitch Effect */
  .navLink[data-nav-id="open-source"] .linkText {
    position: relative; /* Needed for pseudo-elements */
  }
  
  .navLink[data-nav-id="open-source"] .linkText::before,
  .navLink[data-nav-id="open-source"] .linkText::after {
    content: attr(data-text); /* Use data-text attribute from HTML */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--bg-primary); /* Match nav background */
    clip: rect(auto, auto, auto, auto);
    opacity: 0;
    z-index: 3; /* Above original text */
    pointer-events: none;
    color: var(--accent-alert); /* Glitch color */
    transition: opacity 0.1s linear; /* Fast transition */
  }
  
  .navLink[data-nav-id="open-source"] .linkText::before {
    text-shadow: -1px 0 var(--accent-secondary); /* Color channel split */
  }
  
  .navLink[data-nav-id="open-source"] .linkText::after {
    text-shadow: 1px 0 var(--accent-highlight); /* Color channel split */
  }
  
  .navLink[data-nav-id="open-source"]:hover .linkText {
    color: var(--accent-alert); /* Change base text color */
    animation: terminalFlicker 0.5s steps(2) infinite;
    opacity: 1 !important; /* Ensure visibility during animation */
  }
  
  .navLink[data-nav-id="open-source"]:hover .linkText::before,
  .navLink[data-nav-id="open-source"]:hover .linkText::after {
    opacity: 1;
    animation: terminalGlitch 0.08s linear infinite alternate;
  }
  
  .navLink[data-nav-id="open-source"]:hover .linkText::after {
    animation-delay: 0.02s; /* Stagger the glitch */
  }
  
  @keyframes terminalFlicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.8; }
  }
  
  @keyframes terminalGlitch {
    0% { clip: rect(23px, 9999px, 9px, 0); transform: skew(0.3deg); }
    25% { clip: rect(15px, 9999px, 99px, 0); transform: skew(-0.2deg); }
    50% { clip: rect(50px, 9999px, 55px, 0); transform: skew(0.1deg); }
    75% { clip: rect(30px, 9999px, 9px, 0); transform: skew(-0.4deg); }
    100% { clip: rect(81px, 9999px, 42px, 0); transform: skew(0.2deg); }
  }
  
  
  /* ======================================== */
  /* Contact Button Styles (Robust/Brutalist) */
  /* ======================================== */
  .contactBtnFinal {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.8rem 1.6rem;
    font-family: var(--font-display);
    font-weight: 800;
    font-size: 0.9rem; /* Slightly smaller than default link */
    color: var(--text-on-accent, #ffffff);
    text-decoration: none !important;
    border-bottom: none !important;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    border: 2px solid var(--accent-primary);
    border-radius: var(--radius-md);
    min-height: 52px; /* Match nav link height */
    background-color: var(--accent-primary);
    cursor: pointer;
    z-index: 1;
    transition: var(--transition-medium);
    transition-property: transform, box-shadow, background-color, border-color, color;
    will-change: transform, box-shadow, background-color, border-color;
    box-shadow: 3px 3px 0px 0px color-mix(in srgb, var(--accent-primary) 60%, black);
    overflow: visible; /* Allow shadow */
  }
  
  .contactBtnFinal .contactText {
    position: relative;
    z-index: 2;
    transition: transform var(--transition-fast);
    display: inline-flex;
    align-items: center;
    gap: 0.5em;
  }
  
  .contactBtnFinal .hourglassSvg {
    display: inline-block;
    width: 1em;
    height: 1em;
    opacity: 0;
    transform: scale(0.8);
    transition: opacity var(--transition-fast), transform var(--transition-fast);
    color: inherit;
    animation: none; /* Initial state */
    vertical-align: -0.1em; /* Adjust alignment */
  }
  
  .contactBtnFinal:hover,
  .contactBtnFinal:focus-visible {
    background-color: var(--accent-secondary);
    border-color: var(--accent-secondary);
    color: var(--text-on-accent, #ffffff);
    box-shadow: 1px 1px 0px 0px color-mix(in srgb, var(--accent-secondary) 60%, black);
    transform: translate(2px, 2px); /* Shift effect */
    outline: none;
  }
  
  .contactBtnFinal:hover .contactText {
    transform: scale(1.01); /* Subtle text grow */
  }
  
  .contactBtnFinal:hover .hourglassSvg,
  .contactBtnFinal:focus-visible .hourglassSvg {
    animation: hourglassRotate 1.6s linear infinite;
    opacity: 1;
    transform: scale(1);
  }
  
  @keyframes hourglassRotate {
    0% { transform: rotate(0deg) scale(1); }
    25% { transform: rotate(90deg) scale(1.1); }
    50% { transform: rotate(180deg) scale(1); }
    75% { transform: rotate(270deg) scale(1.1); }
    100% { transform: rotate(360deg) scale(1); }
  }
  
  .contactBtnFinal:active {
    transform: translate(3px, 3px); /* Deeper press effect */
    background-color: color-mix(in srgb, var(--accent-secondary) 80%, black);
    box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.4);
    border-color: color-mix(in srgb, var(--accent-secondary) 80%, black);
  }
  
  .contactBtnFinal:active .hourglassSvg {
    animation-duration: 0.3s; /* Speed up animation on press */
  }
  
  
  /* ======================================== */
  /* Mobile Menu & Button Styles              */
  /* ======================================== */
  .mobileMenuBtn {
    padding: 0.6rem;
    border: 1px solid rgba(var(--text-primary-rgb), 0.1);
    background: rgba(var(--bg-tertiary-rgb), 0.3);
    cursor: pointer;
    z-index: 110; /* Above nav content, below dropdown */
    width: 48px;
    height: 48px;
    border-radius: var(--radius-md);
    box-shadow: inset 1px 1px 2px rgba(var(--text-primary-rgb), 0.05), inset -1px -1px 2px rgba(var(--shadow-color-rgb), 0.3), 0 2px 5px rgba(var(--shadow-color-rgb), 0.2);
    transition: all var(--transition-fast);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    display: flex; /* Center icon */
    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: relative; /* For absolute positioned icons */
  }
  
  .mobileMenuBtn:hover {
    background: rgba(var(--bg-tertiary-rgb), 0.5);
    transform: scale(1.05);
    border-color: rgba(var(--text-primary-rgb), 0.2);
  }
  
  .mobileMenuBtn:active {
    transform: scale(0.95);
    background: rgba(var(--bg-tertiary-rgb), 0.2);
    box-shadow: inset 1px 1px 3px rgba(var(--shadow-color-rgb), 0.5);
  }
  
  /* --- Icon Containers --- */
  .hamburgerIconWrapper,
  .flourishIconWrapper {
    position: absolute; /* Position inside button */
    width: 26px; /* Hamburger dimensions */
    height: 20px;
    transition: opacity 0.3s ease, transform 0.3s var(--transition-bounce);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Hamburger Lines */
  .hamburgerIconWrapper .bar {
    display: block;
    position: absolute;
    left: 0;
    width: 100%;
    height: 3px;
    background-color: var(--text-primary);
    border-radius: 3px;
    transition: transform 0.3s var(--transition-bounce), opacity 0.3s ease-in-out, top 0.3s ease, bottom 0.3s ease, background-color 0.3s ease;
    transform-origin: center;
    box-shadow: 0 0 3px rgba(var(--accent-primary-rgb), 0.5);
  }
  .hamburgerIconWrapper .bar1 { top: 0; }
  .hamburgerIconWrapper .bar2 { top: 50%; transform: translateY(-50%); }
  .hamburgerIconWrapper .bar3 { bottom: 0; }
  
  /* Initial States for Icons */
  .mobileMenuBtn .hamburgerIconWrapper { opacity: 1; transform: scale(1) rotate(0deg); }
  .mobileMenuBtn .flourishIconWrapper { opacity: 0; transform: scale(0.8) rotate(-90deg); } /* Hidden initially */
  
  /* --- State when Menu is OPEN --- */
  .mobileMenuBtn.menuOpen .hamburgerIconWrapper {
    /* Hide hamburger by rotating/scaling */
    opacity: 0;
    transform: scale(0.8) rotate(90deg);
  }
  
  .mobileMenuBtn.menuOpen .flourishIconWrapper {
    /* Show flourish */
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
  
  /* --- State when BLOG MODE is active (uses Flourish icon regardless of open state) --- */
  .mobileMenuBtn.blogModeActive .hamburgerIconWrapper {
    /* Hide hamburger */
    opacity: 0;
    transform: scale(0.8) rotate(90deg);
  }
  
  .mobileMenuBtn.blogModeActive .flourishIconWrapper {
    /* Show flourish */
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
  
  
  /* Flourish Icon SVG styling */
  .flourishIcon {
    width: 24px;
    height: 24px;
    stroke: var(--accent-highlight); /* Blog accent color */
    stroke-width: 1.5;
    fill: none;
    filter: var(--filter-glow-highlight); /* Add glow */
  }
  
  
  /* --- Mobile Menu Dropdown --- */
  .mobileMenuWrapper {
    position: absolute;
    top: calc(100% + 1px); /* Position below nav */
    left: 0; right: 0;
    background-color: rgba(var(--bg-secondary-rgb), 0.99); /* Match nav bg slightly more opaque */
    border: 1px solid rgba(var(--accent-primary-rgb), 0.2);
    border-top: none;
    backdrop-filter: blur(18px) saturate(130%);
    -webkit-backdrop-filter: blur(18px) saturate(130%);
    box-shadow: 0 20px 40px rgba(var(--shadow-color-rgb), 0.4);
    border-radius: 0 0 var(--radius-xl) var(--radius-xl); /* Rounded bottom corners */
    z-index: 105; /* Below button, above page content */
    overflow: hidden;
  
    /* --- Animation States --- */
    opacity: 0;
    transform: scaleY(0.95) translateY(-10px);
    transform-origin: top center;
    pointer-events: none;
    transition: transform 0.3s var(--transition-bounce), opacity 0.25s ease;
  }
  
  /* Light Mode Mobile Menu */
  :global(.light) .mobileMenuWrapper {
    background-color: rgba(var(--bg-secondary-rgb), 0.99);
    border: 1px solid rgba(var(--accent-primary-rgb), 0.2);
    border-top: none;
    box-shadow: 0 20px 40px var(--nav-shadow-light, rgba(var(--shadow-color-rgb), 0.4));
  }
  
  /* Visible state */
  .mobileMenuOpen {
    opacity: 1;
    transform: scaleY(1) translateY(0);
    pointer-events: auto;
  }
  
  /* Content padding */
  .mobileMenuContent {
    padding-bottom: 1.5rem;
    padding-top: 0.5rem;
  }
  
  /* Adjust padding slightly for blog menu if needed */
  .mobileMenuWrapper.isBlogMenu .mobileMenuContent {
    padding-top: 1rem;
  }
  
  /* Individual mobile links */
  .mobileNavLink {
    display: flex;
    align-items: center;
    padding: 1rem 1.5rem;
    color: var(--text-secondary);
    text-decoration: none !important;
    border-bottom: none !important;
    font-size: 1.1rem;
    font-weight: 600;
    transition: var(--transition-medium);
    transition-property: color, border-left-color, background-color, letter-spacing, transform;
    border-left: 4px solid transparent; /* Indicator bar */
    letter-spacing: 0.05em;
  }
  
  /* Emoji icons */
  .mobileNavLink::before {
    content: ''; /* Default empty */
    display: inline-block;
    width: 1.5em; /* Space for emoji */
    text-align: center;
    margin-right: 0.8em;
    font-size: 1.1em;
    transition: transform var(--transition-fast);
  }
  .mobileNavLink[data-nav-id="services"]::before { content: '⚡'; }
  .mobileNavLink[data-nav-id="projects"]::before { content: '💡'; }
  .mobileNavLink[data-nav-id="open-source"]::before { content: '🛠️'; }
  .mobileNavLink[data-nav-id="blog"]::before { content: '📖'; }
  
  /* Mobile link hover/focus/active */
  .mobileNavLink:hover,
  .mobileNavLink:focus-visible {
    color: var(--text-primary);
    background-color: rgba(var(--accent-primary-rgb), 0.1);
    border-left-color: var(--accent-primary);
    letter-spacing: 0.07em; /* Slight spacing increase */
    transform: translateX(4px); /* Indent effect */
    outline: none;
  }
  .mobileNavLink:hover::before,
  .mobileNavLink:focus-visible::before {
    transform: scale(1.3) rotate(-10deg); /* Emoji pop */
  }
  .mobileNavLink:active {
    background-color: rgba(var(--accent-primary-rgb), 0.15);
    transform: translateX(2px); /* Press effect */
  }
  
  /* Active page indicator styles */
  .mobileNavLink.navActive { /* Applied via JS */
    font-weight: 700;
    border-left-width: 5px;
  }
  /* Active color based on section */
  .mobileNavLink[data-nav-id="services"].navActive { border-left-color: var(--accent-primary); color: var(--accent-primary); background-color: rgba(var(--accent-primary-rgb), 0.08); }
  .mobileNavLink[data-nav-id="projects"].navActive { border-left-color: var(--accent-secondary); color: var(--accent-secondary); background-color: rgba(var(--accent-secondary-rgb), 0.08); }
  .mobileNavLink[data-nav-id="open-source"].navActive { border-left-color: var(--accent-alert); color: var(--accent-alert); background-color: rgba(var(--accent-alert-rgb), 0.08); }
  .mobileNavLink[data-nav-id="blog"].navActive { border-left-color: var(--accent-highlight); color: var(--accent-highlight); background-color: rgba(var(--accent-highlight-rgb), 0.08); }
  
  /* Apply active color to emoji (if needed, often handled by parent color) */
  /* .mobileNavLink[data-nav-id="services"].navActive::before { color: var(--accent-primary); } */
  /* ... etc ... */
  
  
  /* Mobile Contact Button */
  .mobileContact {
    /* Inherits .contactBtnFinal styles via className composition in component */
    /* Add mobile-specific layout adjustments */
    display: block; /* Make it full width within padding */
    text-align: center;
    margin: 1.5rem 1.5rem 1rem 1.5rem; /* Top, sides, bottom */
    font-size: 1.05rem; /* Slightly larger for touch */
    padding: 0.8rem 1.5rem;
  }
  
  /* Footer inside mobile menu */
  .mobileMenuFooter {
    text-align: center;
    padding: 1.5rem 1rem;
    font-size: 0.8rem;
    font-family: var(--font-mono);
    color: var(--text-muted);
    background-color: rgba(var(--bg-primary-rgb), 0.7); /* Slightly different bg */
    border-top: 1px solid rgba(var(--accent-primary-rgb), 0.1);
    letter-spacing: 0.05em;
  }
  
  /* ======================================== */
  /* Responsive Visibility Control            */
  /* ======================================== */
  /* Assumed handled by utility classes (like Tailwind's md:flex, hidden, md:hidden) in the Nav.tsx component */
  /* Example (if NOT using Tailwind): */
  /*
  @media (max-width: 768px) {
    .navDesktop { display: none; }
    .contactBtnFinal:not(.mobileContact) { display: none; } // Hide desktop contact btn
  }
  @media (min-width: 769px) {
    .mobileMenuBtn { display: none; }
    .mobileMenuWrapper { display: none !important; } // Ensure dropdown is hidden
    .mobileContact { display: none; } // Hide mobile contact button
  }
  */
  
  /* ======================================== */
  /* Keyframe Animations Used                 */
  /* ======================================== */
  
  /* Add any other necessary keyframes here, like: */
  /* @keyframes animatedGradientVibrant { ... } */
  /* @keyframes surrealTextGlitchV10 { ... } */
  
  /* Ensure necessary keyframes from original CSS are present */
  @keyframes animatedGradientVibrant {
    to { background-position: 250% center; }
  }
  
  @keyframes surrealTextGlitchV10 {
    /* Placeholder - add your specific glitch animation */
    0% { transform: translate(0); opacity: 1; }
    5% { transform: translate(-1px, 1px) skew(-0.5deg); opacity: 0.95; }
    10% { transform: translate(1px, -1px) skew(0.3deg); opacity: 1; }
    /* ... more steps ... */
    100% { transform: translate(0); opacity: 1; }
  }