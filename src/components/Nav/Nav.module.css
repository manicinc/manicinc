/* src/components/Nav/Nav.module.css */

/* ======================================== */
/* Base Nav Container & Structure           */
/* ======================================== */

.navContainer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    min-height: 60px; /* Adjusted min-height */
    transition: background 0.4s ease, border-color 0.4s ease, box-shadow 0.4s ease, min-height 0.4s ease;
    /* Subtle Gradient + CSS Noise Texture */
     background-color: var(--bg-nav-dark-end, rgba(var(--bg-secondary-rgb), 0.95));
    background-image: linear-gradient(170deg, var(--bg-nav-dark-start, rgba(var(--bg-primary-rgb), 0.92)) 0%, var(--bg-nav-dark-end, rgba(var(--bg-secondary-rgb), 0.95)) 100%), url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.1'/%3E%3C/svg%3E");
    background-blend-mode: overlay; /* Blend noise */
    background-size: auto, 150px 150px; /* Control noise tile size */
    backdrop-filter: blur(18px) saturate(120%);
    -webkit-backdrop-filter: blur(18px) saturate(120%);
    /* Complex border - Example */
    border-bottom: 1px solid;
    border-image-slice: 1;
    border-image-source: linear-gradient(to right,
        rgba(var(--accent-cool-rgb), 0.1),
        rgba(var(--accent-vibrant-rgb), 0.5) 50%,
        rgba(var(--accent-cool-rgb), 0.1) 100%
    );
    box-shadow: 0 4px 15px -2px rgba(var(--accent-vibrant-rgb), 0.15), 0 8px 30px -10px var(--nav-shadow-dark, rgba(var(--shadow-color-rgb), 0.5));
    z-index: 10002; /* Highest z-index to ensure navbar stays on top */
}

.navScrolled {
    background: linear-gradient(170deg, var(--bg-nav-dark-scrolled-start, rgba(var(--bg-primary-rgb), 1.0)) 0%, var(--bg-nav-dark-scrolled-end, rgba(var(--bg-secondary-rgb), 1.0)) 100%), url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.1'/%3E%3C/svg%3E");
    background-blend-mode: overlay;
    background-size: auto, 150px 150px;
    box-shadow: 0 6px 20px -3px rgba(var(--accent-vibrant-rgb), 0.2), 0 10px 35px -8px var(--nav-shadow-dark, rgba(var(--shadow-color-rgb), 0.6));
    border-image-source: linear-gradient(to right,
        rgba(var(--accent-cool-rgb), 0.2),
        rgba(var(--accent-vibrant-rgb), 0.7) 50%,
        rgba(var(--accent-cool-rgb), 0.2) 100%
    );
}

/* --- Light Mode --- */
:global(.light) .navContainer {
    background: linear-gradient(170deg, var(--bg-nav-light-start, rgba(var(--bg-primary-rgb), 0.95)) 0%, var(--bg-nav-light-end, rgba(var(--bg-secondary-rgb), 0.98)) 100%), url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.05'/%3E%3C/svg%3E");
    background-blend-mode: multiply; /* Different blend for light */
    background-size: auto, 150px 150px;
    border-image-source: linear-gradient(to right,
        rgba(var(--accent-cool-rgb), 0.2),
        rgba(var(--accent-vibrant-rgb), 0.4) 50%,
        rgba(var(--accent-cool-rgb), 0.2) 100%
    );
    box-shadow: 0 4px 15px -2px rgba(var(--accent-vibrant-rgb), 0.1), 0 8px 30px -10px var(--nav-shadow-light, rgba(var(--shadow-color-rgb), 0.3));
}

:global(.light) .navScrolled {
    background: linear-gradient(170deg, var(--bg-nav-light-scrolled-start, rgba(var(--bg-primary-rgb), 1.0)) 0%, var(--bg-nav-light-scrolled-end, rgba(var(--bg-secondary-rgb), 1.0)) 100%), url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.05'/%3E%3C/svg%3E");
    background-blend-mode: multiply;
    background-size: auto, 150px 150px;
    box-shadow: 0 6px 20px -3px rgba(var(--accent-vibrant-rgb), 0.15), 0 10px 35px -8px var(--nav-shadow-light, rgba(var(--shadow-color-rgb), 0.4));
    border-image-source: linear-gradient(to right,
        rgba(var(--accent-cool-rgb), 0.3),
        rgba(var(--accent-vibrant-rgb), 0.6) 50%,
        rgba(var(--accent-cool-rgb), 0.3) 100%
    );
}


/* ======================================== */
/* Logo & Tagline Styles                    */
/* ======================================== */
.logoLink {
    text-decoration: none !important;
    border-bottom: none !important;
    color: transparent; /* Keep for background-clip */
    display: inline-block;
    position: relative;
    font-family: var(--font-logo, 'Mona Sans', sans-serif); /* Use logo font */
    font-weight: 700; /* Make it bold */
    outline: none;
    transition: filter var(--transition-fast), transform var(--transition-medium);
    /* Added text shadow */
    text-shadow: 1px 1px 0 rgba(0,0,0,0.2), 0 0 8px rgba(var(--accent-vibrant-rgb), 0.3);
    letter-spacing: 0.02em;
    transform: translateZ(0); /* GPU accel */
    will-change: filter, transform;
    /* Ensure it's clickable */
    cursor: pointer;
    -webkit-user-select: none; /* Prevent text selection */
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
:global(.light) .logoLink {
    text-shadow: 1px 1px 0 rgba(var(--shadow-color-rgb), 0.2), 0 0 8px rgba(var(--accent-vibrant-rgb), 0.2);
}

.logoLink:hover {
    filter: brightness(1.1);
    transform: scale(1.03) translateZ(0); /* Slight scale on hover */
}

/* Specific Logo Text Styling */
.logoText,
.ManicAgencyLogoComponentInternalTextClass { /* Target both possibilities */
    font-family: inherit;
    font-weight: inherit;
    letter-spacing: inherit;
    font-size: 1.3rem; /* Adjust size */
    position: relative;
    display: inline-block;
    background: linear-gradient(135deg, var(--accent-cool) 0%, var(--accent-vibrant) 70%, var(--accent-vibrant-dark) 100%);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    background-size: 250% auto;
    animation: animatedGradientCoolVibrant 6s ease-in-out infinite alternate;
}
:global(.light) .logoText,
:global(.light) .ManicAgencyLogoComponentInternalTextClass {
     background: linear-gradient(135deg, var(--accent-cool) 0%, var(--accent-vibrant) 70%, var(--accent-vibrant-dark) 100%); /* Keep same gradient for light mode? Adjust if needed */
}

/* ======================================== */
/* Responsive Logo Text Behavior            */
/* ======================================== */

@keyframes animatedGradientCoolVibrant {
  0% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}

/* Tagline Styles */
.tagline {
    font-family: var(--font-mono);
    font-size: 0.7rem; /* Smaller */
    letter-spacing: 0.06em;
    opacity: 0.8;
    transition: opacity var(--transition-fast), color var(--transition-fast);
    color: var(--text-secondary);
    text-shadow: 0 0 2px rgba(var(--text-secondary-rgb), 0.2);
    line-height: 1.2;
    flex-shrink: 1;
    min-width: 0;
    white-space: nowrap;
    margin-left: 0.5rem; /* Add space between logo and tagline */
    margin-top: -2px; /* Fine-tune vertical alignment */
}

/* Blog tagline styling */
.taglineBlog {
    color: var(--accent-secondary);
     text-shadow: 0 0 4px rgba(var(--accent-secondary-rgb), 0.3);
     margin-top: -40px;
     margin-left: 80px;
     /* Removed specific positioning - handled by flex layout */
}

.tagline:hover {
    opacity: 1;
    color: var(--text-primary);
}

/* Tagline Icons */
.tagline :global(span.animated-ascii),
.tagline .taglineScopeIcon {
    display: inline-block;
    vertical-align: middle;
    margin: 0 0.2em;
    opacity: 0.8;
}
.taglineScopeIcon {
    width: 0.8em;
    height: 0.8em;
    stroke: currentColor; /* Inherit color */
    stroke-width: 1.5;
}
.tagline:hover .taglineScopeIcon {
    transform: rotate(-10deg);
}


/* ====================================================== */
/* Desktop Nav Links Styles (SVG Hover Animation Enabled) */
/* ====================================================== */
.navDesktop {
    display: flex;
    align-items: stretch; /* Ensure links fill height */
    gap: 0.4rem; /* Slightly reduced gap */
}

/* src/components/Nav/Nav.module.css */

/* Find this rule */
.navLink {
    position: relative; /* Needed for absolute positioned SVG & ::after */
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-height: 48px;
    padding: 0 1.1rem;
    font-family: var(--font-display);
    font-size: 0.9rem;
    font-weight: 600;
    letter-spacing: 0.05em;
    color: var(--text-secondary);
    text-decoration: none !important;
    border: none !important;
    border-bottom: none !important;
    border-radius: var(--radius-base);
    /* overflow: hidden; */ /* <-- DELETE OR COMMENT OUT THIS LINE */
    cursor: pointer;
    background-color: transparent;
    transition: color 0.25s ease, transform 0.2s ease, box-shadow 0.25s ease;
    will-change: color, transform, box-shadow;
    z-index: 1;
}

.navLink:hover {
    color: var(--text-primary);
    transform: translateY(-1px); /* Subtle lift */
    /* box-shadow: inset 0 1px 1px rgba(var(--text-primary-rgb), 0.04), 0 2px 8px rgba(var(--shadow-color-rgb), 0.1); */ /* Optional */
}
:global(.light) .navLink:hover {
    /* box-shadow: inset 0 1px 1px rgba(var(--text-primary-rgb), 0.06), 0 2px 8px rgba(var(--shadow-color-rgb), 0.08); */ /* Optional */
}


.navLink:active {
    transform: translateY(0px) scale(0.98);
    /* box-shadow: inset 0px 1px 2px rgba(var(--shadow-color-rgb), 0.15); */ /* Optional */
}

.linkText {
    position: relative;
    z-index: 2; /* Above the SVG */
    transition: transform 0.4s var(--transition-bounce), opacity 0.4s ease, color var(--transition-fast), filter var(--transition-medium);
    will-change: transform, opacity, color, filter;
    display: inline-block;
    white-space: nowrap;
}

/* === SVG Hover Animation Container === */
.hoverAnimationSvg {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex; /* Use flex to center content if SVG isn't 100% */
    align-items: center;
    justify-content: center;
    z-index: 1; /* Below link text */
    pointer-events: none; /* Allow clicks to pass through to the link */
    opacity: 0; /* Hidden by default */
    transform: scale(0.9) translateY(5px); /* Start scaled down */
    transition: opacity 0.35s ease-out, transform 0.35s ease-out;
    will-change: opacity, transform;
    /* Inherit color from parent .navLink for base stroke/fill */
    color: inherit;
    stroke: currentColor;
    stroke-width: 1; /* Default stroke */
    fill: none; /* Default fill */
    overflow: visible; /* Allow parts of SVG to animate outside bounds */
}

/* Show SVG on hover/focus */
.navLink:hover .hoverAnimationSvg,
.navLink:focus-visible .hoverAnimationSvg {
    opacity: 1;
    transform: scale(1) translateY(0); /* Scale up to full size */
}

/* === Specific Link Hover Styles (Text + SVG Container) === */

/* Services Link */
.navLink[data-nav-id="services"]:hover .linkText {
    color: var(--accent-vibrant); /* Use vibrant color */
    text-shadow: var(--text-shadow-vibrant); /* Add vibrant glow */
}
.navLink[data-nav-id="services"] .hoverAnimationSvg {
    color: var(--accent-vibrant); /* Set SVG color */
    filter: var(--filter-glow-vibrant); /* Add SVG glow */
}

/* Projects Link */
.navLink[data-nav-id="projects"]:hover .linkText {
    color: var(--accent-secondary);
    /* filter: blur(0.5px) brightness(1.1); */ /* Optional subtle text effect */
     text-shadow: 0 0 6px rgba(var(--accent-secondary-rgb), 0.5);
}
.navLink[data-nav-id="projects"] .hoverAnimationSvg {
    color: var(--accent-secondary);
    filter: var(--filter-glow-secondary);
}

/* Open Source Link (Terminal Glitch) */
.navLink[data-nav-id="open-source"] .linkText {
    position: relative; /* Needed for ::before/::after */
}
.navLink[data-nav-id="open-source"] .linkText::before,
.navLink[data-nav-id="open-source"] .linkText::after {
    content: attr(data-text); /* Use data-text for glitch content */
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: var(--bg-primary); /* Match nav background */
    clip-path: inset(50% 0 50% 0); /* Start clipped */
    opacity: 0;
    z-index: 3; /* Above original text */
    pointer-events: none;
    color: var(--accent-cool); /* Glitch color */
    transition: clip-path 0.1s steps(2), opacity 0.1s steps(2);
}
.navLink[data-nav-id="open-source"] .linkText::before {
    text-shadow: -1px 0 var(--accent-vibrant-light); /* Offset shadow */
}
.navLink[data-nav-id="open-source"] .linkText::after {
    text-shadow: 1px 0 var(--accent-cool-light); /* Offset shadow */
}
.navLink[data-nav-id="open-source"]:hover .linkText {
    color: var(--accent-cool); /* Base text color changes */
    animation: terminalFlicker 0.6s steps(3) infinite alternate; /* Flicker effect */
}
.navLink[data-nav-id="open-source"]:hover .linkText::before,
.navLink[data-nav-id="open-source"]:hover .linkText::after {
    opacity: 1;
    animation: terminalGlitchPath 0.1s linear infinite alternate; /* Animate clip-path */
}
.navLink[data-nav-id="open-source"]:hover .linkText::after {
    animation-delay: 0.03s; /* Delay second glitch layer */
}
.navLink[data-nav-id="open-source"] .hoverAnimationSvg {
    color: var(--accent-cool); /* Use cool color for SVG */
    filter: var(--filter-glow-cool);
}
@keyframes terminalFlicker {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}
@keyframes terminalGlitchPath {
  0% { clip-path: inset(20% 0 70% 0); }
  25% { clip-path: inset(80% 0 10% 0); }
  50% { clip-path: inset(40% 0 40% 0); }
  75% { clip-path: inset(60% 0 20% 0); }
  100% { clip-path: inset(10% 0 85% 0); }
}


/* Blog & About Links */
.navLinkBlog { /* Can be shared by Blog and About */
   /* font-family: var(--font-mono); */ /* Optional */
}
.navLink[data-nav-id="blog"]:hover .linkText,
.navLink[data-nav-id="about"]:hover .linkText {
    color: var(--accent-highlight);
    transform: scale(1.02) skew(-1deg);
    text-shadow: 0 0 8px rgba(var(--accent-highlight-rgb), 0.6);
    /* filter: url(#blogLinkWarp) brightness(1.1); */ /* Optional SVG filter */
}
.navLink[data-nav-id="blog"] .hoverAnimationSvg,
.navLink[data-nav-id="about"] .hoverAnimationSvg {
    color: var(--accent-highlight);
    filter: var(--filter-glow-highlight);
}


/* === Active Link Styles === */
.navActive {
    /* Optional: Add subtle background or inset shadow */
    /* background-color: rgba(var(--text-primary-rgb), 0.03); */
     box-shadow: inset 0px 1px 2px rgba(var(--shadow-color-rgb), 0.1);
}
:global(.light) .navActive {
    /* background-color: rgba(var(--text-primary-rgb), 0.05); */
     box-shadow: inset 0px 1px 2px rgba(var(--shadow-color-rgb), 0.08);
}


.navActive .linkText {
    font-weight: 700; /* Bold active text */
    /* Ensure active text color matches hover color */
}

/* Set active text colors to match hover colors */
.navLink[data-nav-id="services"].navActive .linkText { color: var(--accent-vibrant); text-shadow: var(--text-shadow-vibrant); }
.navLink[data-nav-id="projects"].navActive .linkText { color: var(--accent-secondary); text-shadow: 0 0 6px rgba(var(--accent-secondary-rgb), 0.5); }
.navLink[data-nav-id="open-source"].navActive .linkText { color: var(--accent-cool); } /* Keep glitch off for active */
.navLink[data-nav-id="blog"].navActive .linkText,
.navLink[data-nav-id="about"].navActive .linkText { color: var(--accent-highlight); text-shadow: 0 0 8px rgba(var(--accent-highlight-rgb), 0.6); }

/* Hide SVG and stop its animation when link is active */
.navActive .hoverAnimationSvg {
    opacity: 0 !important;
    transform: scale(0.9) translateY(5px) !important;
    pointer-events: none !important;
    animation-play-state: paused !important;
}
.navActive .hoverAnimationSvg * {
    animation-play-state: paused !important; /* Pause animations on child elements too */
}

/* Trigger SVG Animations on Hover/Focus (if SVGs have internal animations) */
/* These selectors assume your SVG components add classes like 'animated-stroke', etc. */
.navLink:hover .hoverAnimationSvg .animated-stroke,
.navLink:focus-visible .hoverAnimationSvg .animated-stroke,
.navLink:hover .hoverAnimationSvg .animated-fill,
.navLink:focus-visible .hoverAnimationSvg .animated-fill,
.navLink:hover .hoverAnimationSvg .svg-pulse,
.navLink:focus-visible .hoverAnimationSvg .svg-pulse,
.navLink:hover .hoverAnimationSvg .svg-eyelid,
.navLink:focus-visible .hoverAnimationSvg .svg-eyelid,
.navLink:hover .hoverAnimationSvg .eye-scanline,
.navLink:focus-visible .hoverAnimationSvg .eye-scanline,
.navLink:hover .hoverAnimationSvg .svg-chevron,
.navLink:focus-visible .hoverAnimationSvg .svg-chevron,
.navLink:hover .hoverAnimationSvg .svg-quill-nib,
.navLink:focus-visible .hoverAnimationSvg .svg-quill-nib,
.navLink:hover .hoverAnimationSvg .quill-feather,
.navLink:focus-visible .hoverAnimationSvg .quill-feather,
.navLink:hover .hoverAnimationSvg .branch-left,
.navLink:focus-visible .hoverAnimationSvg .branch-left,
.navLink:hover .hoverAnimationSvg .branch-right,
.navLink:focus-visible .hoverAnimationSvg .branch-right,
.navLink:hover .hoverAnimationSvg .pulse-node, /* Add any other animation classes */
.navLink:focus-visible .hoverAnimationSvg .pulse-node {
    /* Ensure animations play only on hover/focus, not when active */
    animation-play-state: running !important;
}


/* ======================================== */
/* Contact Button Styles (Brutalist/Robust) */
/* ======================================== */
.contactBtnFinal {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.6rem 1.4rem; /* Adjusted padding */
    font-family: var(--font-display);
    font-weight: 700; /* Bold */
    color: var(--text-on-accent, #ffffff);
    text-decoration: none !important;
    border-bottom: none !important;
    text-transform: uppercase;
    letter-spacing: 0.08em;
    border: 2px solid color-mix(in srgb, var(--accent-vibrant) 85%, black); /* Darker border */
    border-radius: var(--radius-sharp); /* Sharp Corners */
    min-height: 48px; /* Match nav links */
    background: linear-gradient(145deg, var(--accent-vibrant), var(--accent-vibrant-dark)); /* Gradient BG */
    cursor: pointer;
    z-index: 1;
    transition: var(--transition-medium);
    transition-property: transform, box-shadow, background, border-color, color;
    will-change: transform, box-shadow, background, border-color;
    /* Brutalist Shadow */
    box-shadow: 4px 4px 0px 0px color-mix(in srgb, var(--accent-vibrant) 50%, black);
    overflow: visible;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.3); /* Text shadow for depth */
}
:global(.light) .contactBtnFinal {
    border-color: color-mix(in srgb, var(--accent-vibrant) 90%, var(--color-ink));
    box-shadow: 4px 4px 0px 0px color-mix(in srgb, var(--accent-vibrant) 60%, var(--color-ink));
    text-shadow: 1px 1px 0px rgba(var(--color-ink-rgb), 0.2);
    color: var(--color-light-parchment); /* Light text on vibrant bg */
}


.contactBtnFinal .contactText {
    position: relative;
    z-index: 2;
    transition: transform var(--transition-fast);
    display: inline-flex;
    align-items: center;
    gap: 0.6em; /* Increased gap */
}

.contactBtnFinal .hourglassSvg {
    display: inline-block;
    width: 1.1em; /* Larger icon */
    height: 1.1em;
    opacity: 0.8; /* Slightly visible */
    transform: scale(1);
    transition: opacity var(--transition-fast), transform 0.5s var(--transition-bounce), filter 0.3s ease;
    filter: drop-shadow(1px 1px 0px rgba(0,0,0,0.4));
    color: inherit;
    animation: none;
    vertical-align: -0.1em;
}
:global(.light) .contactBtnFinal .hourglassSvg {
     filter: drop-shadow(1px 1px 0px rgba(var(--color-ink-rgb), 0.3));
}


.contactBtnFinal:hover,
.contactBtnFinal:focus-visible {
    background: linear-gradient(145deg, var(--accent-cool), var(--accent-cool-dark)); /* Change to cool color */
    border-color: color-mix(in srgb, var(--accent-cool) 85%, black);
    color: var(--color-ink, #1a111b); /* Dark text on cool bg */
    box-shadow: 2px 2px 0px 0px color-mix(in srgb, var(--accent-cool) 50%, black); /* Reduced shadow */
    transform: translate(2px, 2px); /* Shift effect */
    outline: none;
    text-shadow: none; /* Remove shadow on hover */
}
:global(.light) .contactBtnFinal:hover,
:global(.light) .contactBtnFinal:focus-visible {
    border-color: color-mix(in srgb, var(--accent-cool) 90%, var(--color-ink));
    box-shadow: 2px 2px 0px 0px color-mix(in srgb, var(--accent-cool) 60%, var(--color-ink));
    color: var(--color-ink);
}


.contactBtnFinal:hover .contactText {
    transform: scale(1.02); /* Slightly grow text */
}

.contactBtnFinal:hover .hourglassSvg,
.contactBtnFinal:focus-visible .hourglassSvg {
    /* Keep rotation, make it smoother */
    animation: hourglassRotateSmooth 1.8s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite;
    opacity: 1;
    filter: drop-shadow(1px 1px 0px rgba(0,0,0,0.4));
    transform: scale(1.1); /* Enlarge icon */
}
:global(.light) .contactBtnFinal:hover .hourglassSvg,
:global(.light) .contactBtnFinal:focus-visible .hourglassSvg {
     filter: drop-shadow(1px 1px 0px rgba(var(--color-ink-rgb), 0.3));
}

@keyframes hourglassRotateSmooth {
  0% { transform: rotate(0deg) scale(1.1); }
  100% { transform: rotate(360deg) scale(1.1); }
}


.contactBtnFinal:active {
    transform: translate(4px, 4px); /* Push further */
    background: linear-gradient(145deg, var(--accent-cool-dark), color-mix(in srgb, var(--accent-cool) 50%, black));
    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.5); /* Inset shadow */
    border-color: color-mix(in srgb, var(--accent-cool) 50%, black);
}
:global(.light) .contactBtnFinal:active {
     transform: translate(4px, 4px);
     background: linear-gradient(145deg, var(--accent-cool-dark), color-mix(in srgb, var(--accent-cool) 70%, var(--color-ink)));
     box-shadow: inset 1px 1px 3px rgba(var(--color-ink-rgb), 0.3);
     border-color: color-mix(in srgb, var(--accent-cool) 70%, var(--color-ink));
}


.contactBtnFinal:active .hourglassSvg {
    animation-duration: 0.2s; /* Faster spin on click */
    transform: scale(1.0); /* Slightly shrink */
}

/* ======================================== */
/* Mobile Menu Button (Ornamental Hamburger) */
/* ======================================== */
.mobileMenuBtn {
    padding: 0; /* Remove padding, use width/height */
    border: 1px solid rgba(var(--text-primary-rgb), 0.15);
    /* Neomorphic subtle background */
    background: linear-gradient(145deg, var(--bg-secondary), var(--bg-tertiary));
    cursor: pointer;
    z-index: 110; /* Above mobile menu */
    width: 44px; /* Fixed size */
    height: 44px;
    border-radius: var(--radius-base); /* Consistent radius */
    /* Neomorphic Shadow */
    box-shadow: var(--shadow-neo-dark, 3px 3px 6px rgba(0,0,0,0.4), -3px -3px 6px rgba(var(--bg-tertiary-rgb),0.1));
    transition: all 0.3s ease; /* Smoother transition */
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: relative; /* Needed for absolute positioned bars */
}

:global(.light) .mobileMenuBtn {
     background: linear-gradient(145deg, var(--bg-secondary), var(--bg-tertiary));
     box-shadow: var(--shadow-neo-light, 3px 3px 6px rgba(var(--shadow-color-rgb), 0.1), -3px -3px 6px rgba(255,255,255,0.7));
     border-color: rgba(var(--text-primary-rgb), 0.1);
}


.mobileMenuBtn:hover {
    border-color: rgba(var(--accent-vibrant-rgb), 0.3);
    transform: scale(1.05) translateY(-1px);
    /* Enhance shadow on hover */
    box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.45), -4px -4px 8px rgba(var(--bg-tertiary-rgb), 0.12), 0 0 10px rgba(var(--accent-vibrant-rgb), 0.3);
}
:global(.light) .mobileMenuBtn:hover {
     border-color: rgba(var(--accent-vibrant-rgb), 0.2);
     box-shadow: 4px 4px 8px rgba(var(--shadow-color-rgb), 0.12), -4px -4px 8px rgba(255, 255, 255, 0.8), 0 0 10px rgba(var(--accent-vibrant-rgb), 0.2);
}


.mobileMenuBtn:active {
    transform: scale(0.98);
    box-shadow: var(--shadow-neo-inset-dark, inset 2px 2px 5px rgba(0,0,0,0.6), inset -2px -2px 5px rgba(var(--bg-tertiary-rgb),0.1)); /* Deeper Inset shadow */
    background: linear-gradient(145deg, var(--bg-tertiary), var(--bg-secondary)); /* Invert gradient */
}
:global(.light) .mobileMenuBtn:active {
     box-shadow: var(--shadow-neo-inset-light, inset 2px 2px 5px rgba(var(--shadow-color-rgb), 0.15), inset -2px -2px 5px rgba(255,255,255,0.8));
     background: linear-gradient(145deg, var(--bg-tertiary), var(--bg-secondary));
}


/* Hamburger Bars Container */
.hamburgerIconWrapper {
    width: 24px; /* Define exact dimensions */
    height: 18px;
    position: relative;
    transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1); /* Bounce out */
}

.hamburgerIconWrapper .bar {
    display: block;
    position: absolute;
    left: 0;
    width: 100%;
    height: 3px; /* Thickness */
    background-color: var(--text-primary);
    border-radius: 3px;
    transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1), /* Bounce */
                opacity 0.3s ease-in-out,
                background-color 0.4s ease;
    transform-origin: center;
    /* Subtle glow on bars */
    box-shadow: 0 0 4px 1px rgba(var(--accent-vibrant-rgb), 0.3);
}
:global(.light) .hamburgerIconWrapper .bar {
    background-color: var(--text-primary); /* Ensure contrast in light mode */
    box-shadow: 0 0 4px 1px rgba(var(--accent-vibrant-rgb), 0.2);
}


/* Bar positions */
.hamburgerIconWrapper .bar1 { top: 0; }
.hamburgerIconWrapper .bar2 { top: 50%; transform: translateY(-50%); }
.hamburgerIconWrapper .bar3 { bottom: 0; }

/* --- Ornamental Hamburger -> X Animation --- */
.mobileMenuBtn.menuOpen .hamburgerIconWrapper {
     transform: rotate(180deg) scale(0.9); /* Rotate and slightly shrink */
}

.mobileMenuBtn.menuOpen .bar {
    background-color: var(--accent-vibrant); /* Change color to vibrant */
    box-shadow: 0 0 6px 2px rgba(var(--accent-vibrant-rgb), 0.7); /* Enhance glow */
}

.mobileMenuBtn.menuOpen .bar1 {
    transform: translateY(7.5px) rotate(45deg); /* Move down and rotate */
    transition-delay: 0s; /* Start immediately */
}

.mobileMenuBtn.menuOpen .bar2 {
    opacity: 0;
    transform: translateY(-50%) scaleX(0); /* Fade and shrink completely */
    transition-delay: 0.1s; /* Slight delay */
}

.mobileMenuBtn.menuOpen .bar3 {
    transform: translateY(-7.5px) rotate(-45deg); /* Move up and rotate */
    transition-delay: 0s; /* Start immediately */
}


/* ======================================== */
/* Mobile Menu Dropdown (Improved Style)    */
/* ======================================== */
.mobileMenuWrapper {
    position: absolute;
    top: calc(100% + 1px); /* Position below nav */
    left: 0; right: 0;
    /* Neomorphic background with gradient */
    background: linear-gradient(160deg, rgba(var(--bg-secondary-rgb), 0.98), rgba(var(--bg-primary-rgb), 0.99));
    border: 1px solid rgba(var(--accent-vibrant-rgb), 0.15); /* Subtle vibrant border */
    border-top: none;
    backdrop-filter: blur(20px) saturate(140%);
    -webkit-backdrop-filter: blur(20px) saturate(140%);
    /* Soft Neomorphic Shadow */
    box-shadow: 0 15px 30px -10px rgba(var(--shadow-color-rgb), 0.3), var(--shadow-neo-inset-dark);
    border-radius: 0 0 var(--radius-lg) var(--radius-lg); /* Slightly larger radius */
    z-index: 105; /* Below button */
    overflow: hidden; /* Important for border-radius */

    /* --- Animation States --- */
    opacity: 0;
    transform: translateY(-15px) scaleY(0.95); /* Start higher and scaled */
    transform-origin: top center;
    pointer-events: none; /* Prevent interaction when hidden */
    transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1), /* Bounce effect */
                opacity 0.3s ease;
}

/* Light Mode Mobile Menu */
:global(.light) .mobileMenuWrapper {
     background: linear-gradient(160deg, rgba(var(--bg-secondary-rgb), 0.98), rgba(var(--bg-primary-rgb), 0.99));
     border: 1px solid rgba(var(--accent-vibrant-rgb), 0.1);
     box-shadow: 0 15px 30px -10px var(--nav-shadow-light), var(--shadow-neo-inset-light);
}


/* Add 'mobileMenuOpen' class to wrapper when menu is open */
.mobileMenuOpen {
    opacity: 1;
    transform: translateY(0) scaleY(1); /* Animate to final position */
    pointer-events: auto; /* Allow interaction */
}

.mobileMenuContent {
    padding-top: 0.8rem; /* Add padding inside */
    padding-bottom: 0.5rem;
    max-height: calc(100vh - 80px); /* Prevent menu from being too tall */
    overflow-y: auto; /* Allow scrolling if content overflows */
}

.mobileNavLink {
    display: flex;
    align-items: center;
    padding: 0.9rem 1.5rem; /* Adjust padding */
    margin: 0.3rem 0.8rem; /* Add margin for spacing between items */
    color: var(--text-secondary);
    text-decoration: none !important; border-bottom: none !important;
    font-size: 1.05rem;
    font-weight: 600;
    font-family: var(--font-display);
    transition: var(--transition-medium);
    transition-property: color, background-color, border-radius, transform, box-shadow;
    border-radius: var(--radius-base); /* Rounded corners */
    letter-spacing: 0.04em;
    position: relative;
    overflow: hidden;
    border: 1px solid transparent; /* Placeholder for active state */
    cursor: pointer;
}

/* --- Mobile Link Hover/Focus --- */
.mobileNavLink:hover,
.mobileNavLink:focus-visible {
    color: var(--text-primary);
    background-color: rgba(var(--accent-vibrant-rgb), 0.1); /* Vibrant hover */
    transform: translateX(3px) scale(1.01); /* Subtle move and scale */
    outline: none;
    box-shadow: 0 2px 5px rgba(var(--accent-vibrant-rgb), 0.1);
    border-radius: var(--radius-md);
}
:global(.light) .mobileNavLink:hover,
:global(.light) .mobileNavLink:focus-visible {
     background-color: rgba(var(--accent-vibrant-rgb), 0.08);
     box-shadow: 0 2px 5px rgba(var(--accent-vibrant-rgb), 0.08);
}

.mobileNavLink:active {
    background-color: rgba(var(--accent-vibrant-rgb), 0.15);
    transform: translateX(1px) scale(0.99);
    box-shadow: inset 0 1px 3px rgba(var(--shadow-color-rgb), 0.1);
}
:global(.light) .mobileNavLink:active {
    background-color: rgba(var(--accent-vibrant-rgb), 0.12);
    box-shadow: inset 0 1px 3px rgba(var(--shadow-color-rgb), 0.08);
}


/* --- Mobile Link Active State --- */
.mobileNavLink.navActive {
    font-weight: 700;
    border-radius: var(--radius-md);
    /* Use border/background based on section */
}

.mobileNavLink[data-nav-id="services"].navActive { background-color: rgba(var(--accent-vibrant-rgb), 0.15); color: var(--accent-vibrant); border: 1px solid rgba(var(--accent-vibrant-rgb), 0.3); }
.mobileNavLink[data-nav-id="projects"].navActive { background-color: rgba(var(--accent-secondary-rgb), 0.15); color: var(--accent-secondary); border: 1px solid rgba(var(--accent-secondary-rgb), 0.3); }
.mobileNavLink[data-nav-id="open-source"].navActive { background-color: rgba(var(--accent-cool-rgb), 0.15); color: var(--accent-cool); border: 1px solid rgba(var(--accent-cool-rgb), 0.3); }
.mobileNavLink[data-nav-id="blog"].navActive { background-color: rgba(var(--accent-highlight-rgb), 0.15); color: var(--accent-highlight); border: 1px solid rgba(var(--accent-highlight-rgb), 0.3); }

:global(.light) .mobileNavLink[data-nav-id="services"].navActive { background-color: rgba(var(--accent-vibrant-rgb), 0.1); border-color: rgba(var(--accent-vibrant-rgb), 0.2); }
:global(.light) .mobileNavLink[data-nav-id="projects"].navActive { background-color: rgba(var(--accent-secondary-rgb), 0.1); border-color: rgba(var(--accent-secondary-rgb), 0.2); }
:global(.light) .mobileNavLink[data-nav-id="open-source"].navActive { background-color: rgba(var(--accent-cool-rgb), 0.1); border-color: rgba(var(--accent-cool-rgb), 0.2); }
:global(.light) .mobileNavLink[data-nav-id="blog"].navActive { background-color: rgba(var(--accent-highlight-rgb), 0.1); border-color: rgba(var(--accent-highlight-rgb), 0.2); }


/* --- Mobile Contact Button --- */
.mobileContact {
    /* Inherits .contactBtnFinal styles */
    margin: 1.5rem 1.5rem 1rem; /* Adjust margin */
    display: block; /* Make block to center/fill */
    text-align: center;
    width: calc(100% - 3rem); /* Full width minus margins */
    font-size: 1rem;
    padding: 0.9rem 1.5rem;
}

/* --- Mobile Menu Footer --- */
.mobileMenuFooter {
    text-align: center;
    padding: 1rem 1rem 1.2rem; /* Adjusted padding */
    margin-top: 1rem; /* Space above footer */
    font-size: 0.75rem;
    font-family: var(--font-mono); /* Use mono font */
    color: var(--text-muted);
    background-color: rgba(var(--bg-primary-rgb), 0.5); /* Slightly different bg */
    border-top: 1px solid rgba(var(--accent-cool-rgb), 0.1); /* Cool accent border */
    letter-spacing: 0.06em;
}
:global(.light) .mobileMenuFooter {
     background-color: rgba(var(--bg-tertiary-rgb), 0.5);
     border-top-color: rgba(var(--accent-cool-rgb), 0.15);
}


/* ======================================== */
/* Responsive Adjustments (Mid-Size Fix)    */
/* ======================================== */

/* Target screens between mobile and full desktop, e.g., 768px to 1023px */
@media (min-width: 768px) and (max-width: 1023px) {
    .navLink {
        padding: 0 0.8rem; /* Reduce padding */
        font-size: 0.85rem; /* Slightly smaller font */
        min-height: 44px; /* Reduce height */
    }
    .contactBtnFinal {
        padding: 0.5rem 1rem; /* Reduce padding */
        font-size: 0.8rem; /* Smaller font */
        letter-spacing: 0.06em;
        min-height: 44px; /* Smaller button */
        box-shadow: 3px 3px 0px 0px color-mix(in srgb, var(--accent-vibrant) 50%, black); /* Adjust shadow */
    }
    :global(.light) .contactBtnFinal {
         box-shadow: 3px 3px 0px 0px color-mix(in srgb, var(--accent-vibrant) 60%, var(--color-ink));
         min-height: 44px;
    }

    .contactBtnFinal:hover,
    .contactBtnFinal:focus-visible {
         box-shadow: 1px 1px 0px 0px color-mix(in srgb, var(--accent-cool) 50%, black); /* Adjust shadow */
         transform: translate(1px, 1px);
    }
    :global(.light) .contactBtnFinal:hover,
    :global(.light) .contactBtnFinal:focus-visible {
         box-shadow: 1px 1px 0px 0px color-mix(in srgb, var(--accent-cool) 60%, var(--color-ink));
         transform: translate(1px, 1px);
    }

    .contactBtnFinal:active {
        transform: translate(3px, 3px); /* Adjust active state */
    }
     :global(.light) .contactBtnFinal:active {
        transform: translate(3px, 3px);
    }


    .contactBtnFinal .hourglassSvg {
        width: 1em; height: 1em;
    }
    .navDesktop {
        gap: 0.2rem; /* Reduce gap */
    }
    .logoText {
        font-size: 1.1rem; /* Slightly smaller logo text */
    }
    .tagline {
        font-size: 0.65rem; /* Smaller tagline */
        margin-left: 0.3rem;
    }
    /* Optional: Hide tagline if it causes too much crowding */
    /* .tagline { display: none; } */
}

/* NEW: Hide tagline around 800px where links get too crowded */
@media (min-width: 768px) and (max-width: 1200px) {
    .tagline {
        display: none !important; /* Hide "metaverses intersect here" tagline */
    }
}

/* Slightly larger screens if still needed */
@media (min-width: 1024px) and (max-width: 1199px) {
     .navLink {
        padding: 0 1rem;
        font-size: 0.88rem;
        min-height: 46px;
    }
    .navDesktop {
        gap: 0.3rem;
    }
     .contactBtnFinal {
        padding: 0.6rem 1.2rem;
        font-size: 0.85rem;
        min-height: 46px;
    }
     :global(.light) .contactBtnFinal {
        min-height: 46px;
    }
}

/* ======================================== */
/* Games Button Styles                      */
/* ======================================== */

.gamesBtn {
    display: inline-flex;
    align-items: center;
    gap: 0.4rem;
    padding: 0.5rem 1rem;
    border: 2px solid transparent;
    background: 
        linear-gradient(90deg, #000, #000) padding-box,
        linear-gradient(45deg, #00ff41, #0080ff, #ff0080, #00ff41) border-box;
    color: #00ff41;
    text-decoration: none !important;
    border-bottom: none !important;
    font-family: var(--font-mono);
    font-weight: 700;
    font-size: 0.75rem;
    letter-spacing: 0.12em;
    text-transform: uppercase;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: visible;
    min-height: 36px;
    justify-content: center;
    transform: translateZ(0);
    will-change: transform, filter, text-shadow;
    white-space: nowrap;
    box-shadow: 
        0 0 10px rgba(0, 255, 65, 0.3),
        inset 0 0 10px rgba(0, 255, 65, 0.1);
    filter: brightness(1);
}

/* Terminal brackets */
/* .gamesBtn::before {
    content: "[ ";
    color: #0080ff;
    font-weight: 400;
}

.gamesBtn::after {
    content: " ]";
    color: #0080ff;
    font-weight: 400;
} */

.gamesBtn:hover,
.gamesBtn:focus-visible {
    transform: translateY(-2px);
    color: #ffffff;
    background: 
        linear-gradient(90deg, rgba(0, 255, 65, 0.1), rgba(0, 255, 65, 0.1)) padding-box,
        linear-gradient(45deg, #00ff41, #0080ff, #ff0080, #00ff41) border-box;
    box-shadow: 
        0 0 20px rgba(0, 255, 65, 0.6),
        0 0 40px rgba(0, 255, 65, 0.3),
        inset 0 0 20px rgba(0, 255, 65, 0.2);
    filter: brightness(1.2);
    text-shadow: 
        0 0 5px rgba(0, 255, 65, 0.8),
        0 0 10px rgba(0, 255, 65, 0.6);
    animation: holographicPulse 2s ease-in-out infinite;
}

.gamesBtn:active {
    transform: translateY(0);
    filter: brightness(0.9);
}

/* Light mode adjustments */
:global(.light) .gamesBtn {
    background: 
        linear-gradient(90deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.95)) padding-box,
        linear-gradient(45deg, #00ff41, #0080ff, #ff0080, #00ff41) border-box;
    color: #0080ff;
    box-shadow: 
        0 0 8px rgba(0, 128, 255, 0.4),
        inset 0 0 8px rgba(0, 128, 255, 0.1);
}

.gamesSvg {
    width: 1.2em;
    height: 1.2em;
    transition: transform var(--transition-fast);
    animation: gamesPulse 2s ease-in-out infinite;
    filter: brightness(1);
}

.gamesBtn:hover .gamesSvg {
    animation: gamesRotate 0.6s ease-out, gamesPulse 2s ease-in-out infinite;
    transform: scale(1.1);
    filter: brightness(1.1);
}

@keyframes holographicPulse {
    0%, 100% { 
        filter: brightness(1.2) hue-rotate(0deg);
        text-shadow: 
            0 0 5px rgba(0, 255, 65, 0.8),
            0 0 10px rgba(0, 255, 65, 0.6);
    }
    33% { 
        filter: brightness(1.3) hue-rotate(30deg);
        text-shadow: 
            0 0 8px rgba(0, 128, 255, 0.9),
            0 0 12px rgba(0, 128, 255, 0.7);
    }
    66% { 
        filter: brightness(1.4) hue-rotate(60deg);
        text-shadow: 
            0 0 6px rgba(255, 0, 128, 0.8),
            0 0 12px rgba(255, 0, 128, 0.6);
    }
}

@keyframes gamesPulse {
    0%, 100% { 
        opacity: 1; 
        filter: drop-shadow(0 0 4px currentColor);
    }
    50% { 
        opacity: 0.8; 
        filter: drop-shadow(0 0 8px currentColor);
    }
}

@keyframes gamesRotate {
    0% { transform: rotate(0deg) scale(1.1); }
    50% { transform: rotate(180deg) scale(1.2); }
    100% { transform: rotate(360deg) scale(1.1); }
}



/* Mobile games button */
.mobileGames {
    margin: 0.5rem 1.5rem;
    display: flex !important; /* Use flex to align text and icon */
    align-items: center !important; /* Center align items vertically */
    justify-content: center !important; /* Center align content horizontally */
    text-align: center;
    width: calc(100% - 3rem);
    font-size: 1rem !important; /* Match reach us button size */
    padding: 0.9rem 1.5rem !important; /* Match reach us button padding */
    border-radius: 4px;
    /* Inherit holographic styling from .gamesBtn */
    font-family: var(--font-mono);
    font-weight: 700;
    letter-spacing: 0.06em !important;
    text-transform: uppercase;
    white-space: nowrap !important;
    min-height: auto; /* Let padding control height */
    line-height: 1.2 !important;
    max-width: 100% !important;
    overflow: hidden !important;
    gap: 0.5em !important; /* Add gap between text and icon */
}

.mobileGames .gamesSvg {
    width: 1.2em !important;
    height: 1.2em !important;
    margin-left: 0 !important; /* Remove margin since we're using gap */
    vertical-align: middle !important;
    flex-shrink: 0 !important; /* Prevent icon from shrinking */
}

@media (max-width: 480px) {
    .mobileGames {
        font-size: 0.9rem !important;
        padding: 0.8rem 1.2rem !important;
        margin: 0.5rem 1rem;
        width: calc(100% - 2rem);
        gap: 0.4em !important; /* Smaller gap on very small screens */
    }

    .mobileGames .gamesSvg {
        width: 1.1em !important;
        height: 1.1em !important;
    }
}

/* Make sure mobile nav links don't conflict with games button */
@media (max-width: 768px) {
    .mobileNavLink {
        font-size: 1rem !important; /* Ensure other links stay readable */
        white-space: nowrap !important;
        overflow: hidden !important;
        text-overflow: ellipsis !important;
    }
}

/* ======================================== */
/* Velvet/Looking Glass Specific Styles     */
/* ======================================== */

/* Force velvet pages to use exact same nav height and constrain logo */
:global([data-pathname="/velvet"]) .navContainer,
:global([data-pathname*="/velvet/"]) .navContainer {
    min-height: 60px !important;
    max-height: 60px !important;
    height: 60px !important;
    padding: 0 !important;
    overflow: hidden !important; /* Prevent any overflow */
}

/* Desktop-specific logo constraints */
@media (min-width: 769px) {
    :global([data-pathname="/velvet"]) .logoText,
    :global([data-pathname*="/velvet/"]) .logoText {
        font-size: 1.1rem !important;
        max-height: 36px !important;
        line-height: 1.1 !important;
        overflow: hidden !important;
        display: flex !important;
        align-items: center !important;
    }

    :global([data-pathname="/velvet"]) .navLink,
    :global([data-pathname*="/velvet/"]) .navLink {
        min-height: 48px !important;
        max-height: 48px !important;
        padding: 0 1rem !important;
        display: flex !important;
        align-items: center !important;
    }

    :global([data-pathname="/velvet"]) .contactBtnFinal,
    :global([data-pathname*="/velvet/"]) .contactBtnFinal {
        min-height: 48px !important;
        max-height: 48px !important;
        padding: 0.6rem 1.2rem !important;
        display: flex !important;
        align-items: center !important;
    }

    /* Constrain the entire logo link container */
    :global([data-pathname="/velvet"]) .logoLink,
    :global([data-pathname*="/velvet/"]) .logoLink {
        max-height: 40px !important;
        overflow: hidden !important;
        display: flex !important;
        align-items: center !important;
    }
}

/* Mobile-specific velvet nav height fixes */
@media (max-width: 768px) {
    :global([data-pathname="/velvet"]) .navContainer,
    :global([data-pathname*="/velvet/"]) .navContainer {
        min-height: 45px !important;
        max-height: 45px !important;
        height: 45px !important;
        padding: 0 !important;
        display: flex !important;
        align-items: center !important;
    }

    :global([data-pathname="/velvet"]) .logoText,
    :global([data-pathname*="/velvet/"]) .logoText {
        font-size: 0.9rem !important;
        max-height: 28px !important;
        line-height: 1.1 !important;
    }

    :global([data-pathname="/velvet"]) .mobileMenuBtn,
    :global([data-pathname*="/velvet/"]) .mobileMenuBtn {
        min-height: 36px !important;
        max-height: 36px !important;
        width: 36px !important;
        padding: 8px !important;
    }

    :global([data-pathname="/velvet"]) .hamburgerIconWrapper,
    :global([data-pathname*="/velvet/"]) .hamburgerIconWrapper {
        width: 18px !important;
        height: 12px !important;
    }

    :global([data-pathname="/velvet"]) .logoLink,
    :global([data-pathname*="/velvet/"]) .logoLink {
        max-height: 32px !important;
        overflow: hidden !important;
        display: flex !important;
        align-items: center !important;
    }
}